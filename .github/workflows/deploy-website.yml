name: Deploy Website to GitHub Pages

on:
  # Trigger on pushes to main branch
  push:
    branches: [ main ]
    paths:
      - 'docs/website/**'
      - '.github/workflows/deploy-website.yml'

  # Allow manual trigger
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Copy website files
        run: |
          mkdir -p _site
          cp -r docs/website/* _site/
          
          # Generate API documentation if Doxygen is available
          if command -v doxygen &> /dev/null; then
            echo "Generating API documentation..."
            mkdir -p build
            cd build
            cmake .. -DGOCXX_ENABLE_DOCS=ON
            cmake --build . --target docs
            if [ -d "docs/html" ]; then
              mkdir -p ../_site/api
              cp -r docs/html/* ../_site/api/
            fi
            cd ..
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
